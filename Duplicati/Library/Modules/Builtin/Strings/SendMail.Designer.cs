//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplicati.Library.Modules.Builtin.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SendMail {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SendMail() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duplicati.Library.Modules.Builtin.Strings.SendMail", typeof(SendMail).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module can send email after an operation completes.
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send mail.
        /// </summary>
        internal static string Displayname {
            get {
                return ResourceManager.GetString("Displayname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the destination mail server through MX lookup, please use the option {0} to specify what smtp server to use..
        /// </summary>
        internal static string FailedToLookupMXServer {
            get {
                return ResourceManager.GetString("FailedToLookupMXServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value can be a filename. If a the file exists, the file contents will be used as the message body.
        ///
        ///In the message body, certain tokens are replaced:
        ///%OPERATIONNAME% - The name of the operation, normally &quot;Backup&quot;
        ///%REMOTEURL% - Remote server url
        ///%LOCALPATH% - The path to the local files or folders involved in the operation (if any)
        ///
        ///All commandline options are also reported within %value%, e.g. %volsize%. Any unknown/unset value is removed..
        /// </summary>
        internal static string OptionBodyLong {
            get {
                return ResourceManager.GetString("OptionBodyLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message body.
        /// </summary>
        internal static string OptionBodyShort {
            get {
                return ResourceManager.GetString("OptionBodyShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password used to authenticate with the SMTP server if required..
        /// </summary>
        internal static string OptionPasswordLong {
            get {
                return ResourceManager.GetString("OptionPasswordLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMTP Password.
        /// </summary>
        internal static string OptionPasswordShort {
            get {
                return ResourceManager.GetString("OptionPasswordShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting is required if mail should be sent, all other settings have default values. You can supply multiple email adresses seperated with commas, and you can use the normal adress format as specified by RFC2822 section 3.4.
        ///Example with 3 recipients: 
        ///
        ///Peter Sample &lt;peter@example.com&gt;, John Sample &lt;john@example.com&gt;, admin@example.com.
        /// </summary>
        internal static string OptionRecipientLong {
            get {
                return ResourceManager.GetString("OptionRecipientLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email recipient(s).
        /// </summary>
        internal static string OptionRecipientShort {
            get {
                return ResourceManager.GetString("OptionRecipientShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, mail will only be sent after a Backup operation. Use this option to send mail for all operations..
        /// </summary>
        internal static string OptionSendallLong {
            get {
                return ResourceManager.GetString("OptionSendallLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send email for all operations.
        /// </summary>
        internal static string OptionSendallShort {
            get {
                return ResourceManager.GetString("OptionSendallShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adress of the email sender. If no host is supplied, the hostname of the first recipient is used. Examples of allowed formats:
        ///
        ///sender
        ///sender@example.com
        ///Mail Sender &lt;sender&gt;
        ///Mail Sender &lt;sender@example.com&gt;.
        /// </summary>
        internal static string OptionSenderLong {
            get {
                return ResourceManager.GetString("OptionSenderLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email sender.
        /// </summary>
        internal static string OptionSenderShort {
            get {
                return ResourceManager.GetString("OptionSenderShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can specify one of &quot;{0}&quot;, &quot;{1}&quot;, &quot;{2}&quot;. You can supply multiple options with a comma seperator, e.g. &quot;{0},{1}&quot;. The special value &quot;{3}&quot; is a shorthand for &quot;{0},{1},{2}&quot; and will cause all backup operations to send an email..
        /// </summary>
        internal static string OptionSendlevelLong {
            get {
                return ResourceManager.GetString("OptionSendlevelLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The messages to send.
        /// </summary>
        internal static string OptionSendlevelShort {
            get {
                return ResourceManager.GetString("OptionSendlevelShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A url for the SMTP server, e.g. smtp://example.com:25. Multiple servers can be supplied in a prioritized list, seperated with semicolon. If a server fails, the next server in the list is tried, until the message has been sent.
        ///If no server is supplied, a DNS lookup is performed to find the first recipient&apos;s MX record, and all SMTP servers are tried in their priority order until the message is sent.
        ///
        ///To enable TLS, use the format smtptls://example.com or tls://example.com. If no port is specified, port 25 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OptionServerLong {
            get {
                return ResourceManager.GetString("OptionServerLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMTP Url.
        /// </summary>
        internal static string OptionServerShort {
            get {
                return ResourceManager.GetString("OptionServerShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting supplies the email subject. Values are replaced as described in the description for --{0}..
        /// </summary>
        internal static string OptionSubjectLong {
            get {
                return ResourceManager.GetString("OptionSubjectLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email subject.
        /// </summary>
        internal static string OptionSubjectShort {
            get {
                return ResourceManager.GetString("OptionSubjectShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username used to authenticate with the SMTP server if required..
        /// </summary>
        internal static string OptionUsernameLong {
            get {
                return ResourceManager.GetString("OptionUsernameLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMTP Username.
        /// </summary>
        internal static string OptionUsernameShort {
            get {
                return ResourceManager.GetString("OptionUsernameShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send email: {0}.
        /// </summary>
        internal static string SendMailFailedError {
            get {
                return ResourceManager.GetString("SendMailFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send email with server: {0}, message: {1}, retrying with {2}.
        /// </summary>
        internal static string SendMailFailedRetryError {
            get {
                return ResourceManager.GetString("SendMailFailedRetryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email sent successfully using server: {0}.
        /// </summary>
        internal static string SendMailSuccess {
            get {
                return ResourceManager.GetString("SendMailSuccess", resourceCulture);
            }
        }
    }
}
